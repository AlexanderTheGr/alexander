# To get started with security, check out the documentation:
# http://symfony.com/doc/current/book/security.html

security:
    encoders:
        AppBundle\Entity\User:
            algorithm: bcrypt

    # ...

    providers:
        our_db_provider:
            entity:
                class: AppBundle:User
                property: username
                # if you're using multiple entity managers
                # manager_name: customer
    access_control:
        - { path: ^/login$, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/customergroup/getrulesjson/*, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/customer/getrulesjson/*, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/product/retrieveMtrl/*, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/edi/ediitem/getEdiMarkup, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/product/retrieveApothema, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/product/retrieveSoftone, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/order/setb2border*, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        
        - { path: ^/erp01/customergroup/getrulesjson/*, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/erp01/customer/getrulesjson/*, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/erp01/product/retrieveMtrl/*, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/erp01/edi/ediitem/getEdiMarkup, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/erp01/product/retrieveApothema, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/erp01/product/retrieveSoftone, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/erp01/order/setb2border*, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/erp01/product/getProducts*, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/erp01/product/getManufacturers*, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/erp01/supplier/getSupplier*, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/edi/edi/getEdis*, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        
        
        - { path: ^/, roles: ROLE_USER }
    firewalls:
        login_firewall:
            pattern:   ^/login$
            anonymous: ~        
        main:
            anonymous: ~
            provider: our_db_provider
            access_denied_url: /access_denied
            form_login:
                login_path: /login
                check_path: /login_check
                failure_path: /login_failure

                username_parameter: _username
                password_parameter: _password
            logout:
                path:   /logout
                target: /
                invalidate_session: false    
                