{% extends 'base.html.twig' %}
{% block body %}
{{rules[1] | raw}}    
{{ render(controller('SoftoneBundle:Customergroup:content', { 'ctrl': ctrl,'app':app,'url':url,'content':content }) ) }}
{% endblock %}
{% block stylesheets %}
{% endblock %}
{% block javascripts %}
<!--script src="{{  asset('assets/js/libs/softone/softoneiorder.js') }}"></script-->
    
<script>
    $(".{{ctrl}}").alexTabs("{{app}}", "{{ctrl}}", "{{url}}","{{content|json_encode()}}");
</script>

<script>
    var $dialog = {};
    var rules_basics = [];
    {% for key,rule in rules %}
        rules_basics[{{ key }}] = {{rule | raw}};
    {% endfor %}    
    $dialog.customergrouprule = $("<div style='z-index:100000' class='card'></div>")
            .dialog({
                autoOpen: false,
                resizable: false,
                draggable: false,
                width: "60%",
                modal: true
    });    
    $(".dt_row_customergrouprule").live("click",function(){
        $dialog.customergrouprule.html('\
<button id="btn-get" class="btn btn-primary parse-json" data-target="basic">Get rules</button>\n\
<div id="builder-basic"></div>');
        var ref= $(this).attr("data-ref");
        $dialog.customergrouprule.dialog("open");

            var rules_basic = rules_basics[ref];
         
            $('#builder-basic').queryBuilder({
                plugins: ['bt-tooltip-errors'],
                filters: [{
                        id: 'name',
                        label: 'Name',
                        type: 'string'
                    }, {
                        id: 'supplier',
                        label: 'Supplier',
                        type: 'integer',
                        input: 'select',
                        values: {{supplierjson | raw}},
                        operators: ['equal', 'not_equal', 'in', 'not_in', 'is_null', 'is_not_null']
                    },
                    {
                        id: 'category',
                        label: 'Category',
                        type: 'integer',
                        input: 'select',
                        values: {{categoryjson | raw}},
                        
                        operators: ['equal', 'not_equal', 'in', 'not_in', 'is_null', 'is_not_null']
                    }, {
                        id: 'in_stock',
                        label: 'In stock',
                        type: 'integer',
                        input: 'radio',
                        values: {
                            1: 'Yes',
                            0: 'No'
                        },
                        operators: ['equal']
                    }, {
                        id: 'price',
                        label: 'Price',
                        type: 'double',
                        validation: {
                            min: 0,
                            step: 0.01
                        }
                    }, {
                        id: 'id',
                        label: 'Identifier',
                        type: 'string',
                        placeholder: '____-____-____',
                        operators: ['equal', 'not_equal'],
                        validation: {
                            format: /^.{4}-.{4}-.{4}$/
                        }
                    }],
                rules: rules_basic
            });   
        
    })
    $('#btn-reset').live('click', function () {
        $('#builder-basic').queryBuilder('reset');
    });

    $('#btn-set').live('click', function () {
        $('#builder-basic').queryBuilder('setRules', rules_basic);
    });

    $('#btn-get').live('click', function () {
        var result = $('#builder-basic').queryBuilder('getRules');

        if (!$.isEmptyObject(result)) {
            alert(JSON.stringify(result, null, 2));
        }
    });         
</script>
{% endblock %}
