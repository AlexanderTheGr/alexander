{% extends 'base.html.twig' %}
{% block body %}
<button style='float:right' data-ref='0' id="btn-get-new" class="btn btn-primary parse-json" data-target="basic">New Rule</button>      
{% for button in buttons %}
        <button {{ button.attr }} class="btn {{ button.class }} {{ button.position }}">{{ button.label }}</button>    
{% endfor %}    
{{ render(controller('EdiBundle:Edi:content', { 'ctrl': ctrl,'app':app,'url':url,'content':content }) ) }}
{% endblock %}
{% block stylesheets %}
{% endblock %}
{% block javascripts %}
<script>
    $(".{{ctrl}}").alexTabs("{{app}}", "{{ctrl}}", "{{url}}","{{content|json_encode()}}");
</script>

<script>
    var $dialog = {};
    var rules_basics = [];
    var markups = [];
    var prices = [];
    var sortorders = [];
    var price_fields = [];
    var titles = [];
    rules_basics_new = {
        condition: 'AND',
        rules: [{
            id: 'code',
            operator: 'equal',
            value: ""
        }]
    };
    rules_basics[0] = rules_basics_new;
    markups[0] = 0;
    prices[0] = 0;
    sortorders[0] = 0;
    price_fields[0] = "itemPricer"; 
    titles[0] = "New Rule";
    {% for key,rule in rules %}
        rules_basics[{{ key }}] = {{rule.rule | raw}};
        markups[{{ key }}] = "{{rule.val}}";
        sortorders[{{ key }}] = "{{rule.sortorder}}";
        titles[{{ key }}] = "{{rule.title}}";
        prices[{{ key }}] = "{{rule.price}}";
        price_fields[{{ key }}] = "{{rule.price_field}}";
    {% endfor %}    
    $dialog.edirule = $("<div style='z-index:100000' class='card'></div>")
            .dialog({
                autoOpen: false,
                resizable: false,
                draggable: false,
                width: "60%",
                height: "700",
                modal: true
    });
    var ref=0;
    $(".dt_row_edirule").live("click",function(){
        rule(this);
    })
    $("#btn-get-new").live("click",function(){
        rule(this);
    })    
    $('#btn-reset').live('click', function () {
        $('#builder-basic').queryBuilder('reset');
    });

    $('#btn-set').live('click', function () {
        $('#builder-basic').queryBuilder('setRules', rules_basic);
    });

    function rule(obj) {
        ref = $(obj).attr("data-ref");
        $dialog.edirule.dialog({title:titles[ref]});        
        //$dialog.edirule.title(titles[ref]);
        
        $dialog.edirule.html('<button id="btn-get" class="btn btn-primary parse-json" data-target="basic">Save Rule</button> <button id="btn-delete" class="btn btn-danger parse-json" data-target="basic">Delete Rule</button> <div class="form-group"><div><label for="SoftoneBundle:Customergroup:id:'+ref+'" class="control-label">Title</label><input value="'+titles[ref]+'" class="form-control" id="title" name="SoftoneBundle:Customergroup:id:'+ref+'" formly-custom-validation="" type=""></div></div>  <div class="form-group"><div><label for="SoftoneBundle:Customer:priceField:'+ref+'" class="control-label" ng-if="to.label">Κατάλογος</label><select id="price_field" class="form-control" id="EdiBundle:Edirule:priceField:'+ref+'" name="EdiBundle:Edirule:priceField:'+ref+'" formly-custom-validation="" required="true" type=""><option value="storeRetailPrice" label="Λιανική (storeRetailPrice)">Χονδρική (storeRetailPrice)</option><option value="storeWholeSalePrice" label="Λιανική (storeWholeSalePrice)">Λιανική (storeWholeSalePrice)</option><option value="itemPricer" label="Λιανική (itemPricer)">Λιανική (itemPricer)</option><option value="itemPricew" label="Χονδρική (itemPricew)">Χονδρική (itemPricew)</option><option value="itemPricer01" label="Λιανική 1 (itemPricer01)">Λιανική 1 (itemPricer01)</option><option value="itemPricew01" label="Χονδρική 1 (itemPricew01)">Χονδρική 1 (itemPricew01)</option><option value="itemPricer02" label="Λιανική 2 (itemPricer02)">Λιανική 2 (itemPricer02)</option><option value="itemPricew02" label="Χονδρική 2 (itemPricew02)">Χονδρική 2 (itemPricew02)</option><option value="itemPricer03" label="Λιανική 3 (itemPricer03)">Λιανική 3 (itemPricer03)</option><option value="itemPricew03" label="Χονδρική 3 (itemPricew03)">Χονδρική 3 (itemPricew03)</option><option value="itemPricer04" label="Λιανική 4 (itemPricer04)">Λιανική 4 (itemPricer04)</option><option value="itemPricew04" label="Χονδρική 4 (itemPricew04)">Χονδρική 4 (itemPricew04)</option></select></div></div>   <div class="form-group"><div><label for="SoftoneBundle:Customergroup:id:'+ref+'" class="control-label">Markup</label><input value="'+markups[ref]+'" class="form-control" id="markup" name="SoftoneBundle:Customergroup:id:'+ref+'" formly-custom-validation="" type=""></div></div>  <div class="form-group"><div><label for="SoftoneBundle:Customergroup:id:'+ref+'" class="control-label">Price</label><input value="'+prices[ref]+'" class="form-control" id="price" name="SoftoneBundle:Customergroup:id:'+ref+'" formly-custom-validation="" type=""></div></div>   <div class="form-group"><div><label for="SoftoneBundle:Customergroup:id:'+ref+'" class="control-label">Sortorder</label><input value="'+sortorders[ref]+'" class="form-control" id="sortorder" name="SoftoneBundle:Customergroup:id:'+ref+'" formly-custom-validation="" type=""></div></div>  <div id="builder-basic"></div>');
        var rules_basic = rules_basics[ref];
        $('#builder-basic').queryBuilder({
            plugins: ['bt-tooltip-errors'],
            filters: [{
                    id: 'name',
                    label: 'Name',
                    type: 'string'
                }, {
                    id: 'supplier',
                    label: 'Supplier',
                    type: 'integer',
                    input: 'select',
                    values: {{supplierjson | raw}},
                    /*operators: ['equal', 'not_equal', 'in', 'not_in', 'is_null', 'is_not_null']*/
                    operators: ['equal', 'not_equal']
                },
                {
                    id: 'category',
                    label: 'Category',
                    type: 'integer',
                    input: 'select',
                    values: {{categoryjson | raw}},

                    operators: ['equal', 'not_equal']
                }, {
                    id: 'default',
                    label: 'Default',
                    type: 'integer',
                    input: 'radio',
                    values: {
                        1: 'Yes'
                    },
                    operators: ['equal']
                }, {
                    id: 'code',
                    label: 'ERP Code',
                    type: 'string'
                }],
            rules: rules_basic
        });
        $dialog.edirule.dialog("open");
        setTimeout(function(){ 
            var w = jQuery(".rule-value-container select").width();
            jQuery(".rule-value-container select").chosen({width: "300px"});
        },10)             
        $("#price_field").val(price_fields[ref]);
    }
    $('.rule-filter-container').live('change', function () {
        setTimeout(function(){ 
            var w = jQuery(".rule-value-container select").width();
            jQuery(".rule-value-container select").chosen({width: "300px"});
        },10)         
    })
    $('#btn-delete').live('click', function () {
        var data = {};
        data.id = ref;
        $("#loaderer").show();
        $dialog.edirule.dialog("close");        
        $.post("/edi/edi/deleterule", data, function (result) {
            $("#loaderer").hide();
            var table = dt_tables["ctrlgettabs"];
            table.fnFilter();
        })
    })
    $("#price").live("change",function(){
        $("#markup").val("0.00")
    })
    $("#markup").live("change",function(){
        $("#price").val("0.00")
    })
    
    $('#btn-get').live('click', function () {
        var result = $('#builder-basic').queryBuilder('getRules');

        if (!$.isEmptyObject(result)) {
            //alert(JSON.stringify(result, null, 2));
            
            rules_basics[ref] = result;
            //alert($("#price_field").val());
            //
            markups[ref] = $("#markup").val();
            titles[ref] = $("#title").val();
            sortorders[ref] = $("#sortorder").val();
            price_fields[ref] = $("#price_field").val();
            prices[ref] = $("#price").val();
            var data = {};
            data.id = ref;
            data.edi = '{{edi}}';
            data.title = $("#title").val();
            data.val = $("#markup").val();
            data.price = $("#price").val();
            data.sortorder = $("#sortorder").val();
            data.price_field = $("#price_field").val();
            data.rule = result;
            $("#loaderer").show();
            $dialog.edirule.dialog("close");
            $.post("/edi/edi/saverule", data, function (result) {
                $("#loaderer").hide();
                if (ref == 0) {
                    rules_basics[result.id] = rules_basics[ref];
                    markups[result.id] = markups[ref];
                    sortorders[result.id] = sortorders[ref];
                    prices[result.id] = prices[ref];
                    titles[result.id] = titles[ref];
                    price_fields[result.id] = price_fields[ref];
                    markups[0] = 0;
                    rules_basics[0] = rules_basics_new;
                }
                var table = dt_tables["ctrlgettabs"];
                table.fnFilter();
            })
            
            
        }
    });         
</script>
{% endblock %}
